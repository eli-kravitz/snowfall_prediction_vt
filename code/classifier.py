from torch import nn, optimimport torch.nn.functional as Fclass Classifier(nn.Module):    def __init__(self):        super().__init__()        self.fc1 = nn.Linear(13, 500)        self.fc2 = nn.Linear(500, 250)        self.fc3 = nn.Linear(250, 120)        self.fc4 = nn.Linear(120, 60)        self.fc5 = nn.Linear(60, 32)        self.fc6 = nn.Linear(32, 12)    def forward(self, x):        x = F.relu(self.fc1(x))        x = F.relu(self.fc2(x))        x = F.relu(self.fc3(x))        x = F.relu(self.fc4(x))        x = F.relu(self.fc5(x))        x = F.log_softmax(self.fc6(x))        return x